{"version":3,"sources":["components/Button.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Button","buttonClass","key","isNaN","className","this","props","children","onClick","handleClick","Component","Calculator","calculator","state","operator","setState","io","String","Number","firstNumber","secondNumber","dispControl","slice","indexOf","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iUA0BeA,G,8NArBXC,YAAc,SAAAC,GACV,OAAKC,MAAMD,IAAgB,MAARA,EAEF,MAARA,GAAuB,OAARA,GAAwB,MAARA,EAC7B,SAEA,WAJA,S,uDAOL,IAAD,OACL,OACA,yBACIE,UAAS,iBAAYC,KAAKJ,YAAYI,KAAKC,MAAMC,WACjDC,QAAS,kBAAM,EAAKF,MAAMG,YAAY,EAAKH,MAAMC,YAE/CF,KAAKC,MAAMC,c,GAjBJG,cC0HNC,E,kDAvHb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IASRM,WAAa,WACiB,MAAxB,EAAKC,MAAMC,SACb,EAAKC,SAAS,CAAEC,GAAIC,OAAQC,OAAO,EAAKL,MAAMM,aAAiBD,OAAO,EAAKL,MAAMO,iBAClD,MAAxB,EAAKP,MAAMC,SAClB,EAAKC,SAAS,CAAEC,GAAIC,OAAQC,OAAO,EAAKL,MAAMM,aAAeD,OAAO,EAAKL,MAAMO,iBAChD,MAAxB,EAAKP,MAAMC,SAClB,EAAKC,SAAS,CAAEC,GAAIC,OAAQC,OAAO,EAAKL,MAAMM,aAAeD,OAAO,EAAKL,MAAMO,iBAChD,MAAxB,EAAKP,MAAMC,SAClB,EAAKC,SAAS,CAAEC,GAAIC,OAAQC,OAAO,EAAKL,MAAMM,aAAeD,OAAO,EAAKL,MAAMO,iBAChD,MAAxB,EAAKP,MAAMC,SAClB,EAAKC,SAAS,CAAEC,GAAIC,OAAQC,OAAO,EAAKL,MAAMM,aAAeD,OAAO,EAAKL,MAAMO,iBAChD,MAAxB,EAAKP,MAAMC,UAClB,EAAKC,SAAS,CAAEC,GAAIC,OAAO,KAAD,IAAEC,OAAO,EAAKL,MAAMM,aAAgBD,OAAO,EAAKL,MAAMO,mBAtBjE,EAyBnBC,YAAc,SAAAnB,GACA,MAARA,EACF,EAAKU,aAEU,OAARV,EACP,EAAKa,SAAS,CACZC,GAAI,GACJG,YAAa,GACbL,SAAU,GACVM,aAAc,KAED,MAARlB,EACH,EAAKW,MAAMC,WAAa,EAAKD,MAAMG,GACrC,EAAKD,SAAS,CAAED,SAAU,GAAIE,GAAI,EAAKH,MAAMM,YAAaA,YAAa,KAEvE,EAAKJ,SAAS,CACZC,GAAI,EAAKH,MAAMG,GAAGM,MAAM,GAAI,GAC5BF,aAAc,EAAKP,MAAMO,aAAaE,MAAM,GAAI,KAG7C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKC,QAAQrB,IAAQ,EAClD,EAAKW,MAAMO,aACb,EAAKL,SAAS,CACZI,YAAa,EAAKN,MAAMG,GACxBA,GAAI,GACJF,SAAUZ,EACVkB,aAAc,KAGhB,EAAKL,SAAS,CACZI,YAAa,EAAKN,MAAMG,GACxBA,GAAI,GACJF,SAAUZ,IAIV,EAAKW,MAAMC,SACb,EAAKC,SAAS,CACZC,GAAI,EAAKH,MAAMG,GAAKd,EACpBkB,aAAc,EAAKP,MAAMO,aAAelB,IAG5C,EAAKa,SAAS,CACZC,GAAI,EAAKH,MAAMG,GAAKd,KAlExB,EAAKW,MAAQ,CACXG,GAAI,GACJG,YAAa,GACbL,SAAU,GACVM,aAAc,IANC,E,qDA0EjB,OACE,yBAAKhB,UAAU,cACb,yBAAKA,UAAU,UACX,yBAAKA,UAAU,WACXC,KAAKQ,MAAMM,YADf,QAEId,KAAKQ,MAAMC,SAFf,QAGIT,KAAKQ,MAAMO,aAHf,cAKA,yBAAKhB,UAAU,SAAUC,KAAKQ,MAAMG,GAApC,gBAEJ,yBAAKZ,UAAU,OACX,kBAAC,EAAD,CAAQK,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,OAEJ,yBAAKjB,UAAU,OACX,kBAAC,EAAD,CAAQK,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,MAEJ,yBAAKjB,UAAU,OACX,kBAAC,EAAD,CAAQK,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,MAEJ,yBAAKjB,UAAU,OACX,kBAAC,EAAD,CAAQK,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,MAEJ,yBAAKjB,UAAU,OACX,kBAAC,EAAD,CAAQK,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,KACA,kBAAC,EAAD,CAAQZ,YAAeJ,KAAKgB,aAA5B,W,GAlHaX,aCgBVc,E,uKAZX,OACE,yBAAKpB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,IAAIC,UAAWhB,W,GAN3BD,aCNEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCANC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0e6f187f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Button.css';\n\nclass Button extends Component {\n\n    buttonClass = key => {\n        if (!isNaN(key) || key === '.')\n            return \"input\";\n        else if (key === '=' || key === 'AC' || key === 'c')\n            return \"output\";\n        else\n            return \"operator\";\n    }\n\n    render() {\n        return (\n        <div \n            className={`Button ${this.buttonClass(this.props.children)}`}\n            onClick={() => this.props.handleClick(this.props.children)}\n        >\n            { this.props.children }\n        </div>\n        );\n    }\n    }\n\nexport default Button;\n","import React, { Component } from 'react';\nimport './Calculator.css';\nimport Button from './Button';\n\nclass Calculator extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      io: \"\",\n      firstNumber: \"\",\n      operator: \"\",\n      secondNumber: \"\",\n    }\n  }\n\n  calculator = () => {\n    if (this.state.operator === '+')\n      this.setState({ io: String((Number(this.state.firstNumber)) + (Number(this.state.secondNumber))), });\n    else if (this.state.operator === '-')\n      this.setState({ io: String((Number(this.state.firstNumber) - Number(this.state.secondNumber))), });\n    else if (this.state.operator === 'X')\n      this.setState({ io: String((Number(this.state.firstNumber) * Number(this.state.secondNumber))), });\n    else if (this.state.operator === '/')\n      this.setState({ io: String((Number(this.state.firstNumber) / Number(this.state.secondNumber))), });\n    else if (this.state.operator === '%')\n      this.setState({ io: String((Number(this.state.firstNumber) % Number(this.state.secondNumber))), });\n    else if (this.state.operator === '^')\n      this.setState({ io: String((Number(this.state.firstNumber) ** Number(this.state.secondNumber))), });\n  }\n\n  dispControl = key => {\n    if (key === '='){\n      this.calculator();\n    }\n    else if (key === 'AC')\n      this.setState({\n        io: \"\",\n        firstNumber: \"\",\n        operator: \"\",\n        secondNumber: \"\",\n      });\n    else if (key === 'C'){\n      if (this.state.operator && !this.state.io)\n        this.setState({ operator: \"\", io: this.state.firstNumber, firstNumber: \"\"});\n      else\n        this.setState({\n          io: this.state.io.slice(0, -1), \n          secondNumber: this.state.secondNumber.slice(0, -1),\n        });\n    }\n    else if (['+', '-', 'X', '/', '%', '^'].indexOf(key) >= 0) {\n      if (this.state.secondNumber)\n        this.setState({\n          firstNumber: this.state.io,\n          io: \"\",\n          operator: key,\n          secondNumber: \"\",\n        });\n      else\n        this.setState({\n          firstNumber: this.state.io,\n          io: \"\",\n          operator: key,\n        });\n    }\n    else {\n      if (this.state.operator)\n        this.setState({\n          io: this.state.io + key,\n          secondNumber: this.state.secondNumber + key,\n        });\n      else\n      this.setState({\n        io: this.state.io + key,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Calculator\">\n        <div className='column'>\n            <div className=\"Display\">\n              { this.state.firstNumber } &nbsp;\n              { this.state.operator } &nbsp;\n              { this.state.secondNumber } &nbsp; &nbsp; \n            </div>\n            <div className=\"Input\">{ this.state.io } &nbsp; &nbsp; </div>\n        </div>\n        <div className='row'>\n            <Button handleClick = {this.dispControl}>%</Button>\n            <Button handleClick = {this.dispControl}>^</Button>\n            <Button handleClick = {this.dispControl}>C</Button>\n            <Button handleClick = {this.dispControl}>AC</Button>\n        </div>\n        <div className='row'>\n            <Button handleClick = {this.dispControl}>7</Button>\n            <Button handleClick = {this.dispControl}>8</Button>\n            <Button handleClick = {this.dispControl}>9</Button>\n            <Button handleClick = {this.dispControl}>/</Button>\n        </div>\n        <div className='row'>\n            <Button handleClick = {this.dispControl}>4</Button>\n            <Button handleClick = {this.dispControl}>5</Button>\n            <Button handleClick = {this.dispControl}>6</Button>\n            <Button handleClick = {this.dispControl}>X</Button>\n        </div>\n        <div className='row'>\n            <Button handleClick = {this.dispControl}>1</Button>\n            <Button handleClick = {this.dispControl}>2</Button>\n            <Button handleClick = {this.dispControl}>3</Button>\n            <Button handleClick = {this.dispControl}>+</Button>\n        </div>\n        <div className='row'>\n            <Button handleClick = {this.dispControl}>=</Button>\n            <Button handleClick = {this.dispControl}>0</Button>\n            <Button handleClick = {this.dispControl}>.</Button>\n            <Button handleClick = {this.dispControl}>-</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nimport './App.css';\nimport Calculator from './components/Calculator';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Calculator} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}